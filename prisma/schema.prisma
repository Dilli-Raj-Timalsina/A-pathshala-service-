generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  email     String   @unique
  password  String
  token     String?
  contact   Int?
  role      Role     @default(user)
  courses   Course[] @relation(fields: [courseIds], references: [id])
  courseIds String[] @db.ObjectId
  review    Review?
}

model Course {
  id           String    @id @default(auto()) @map("_id") @db.ObjectId
  title        String
  subTitle     String
  duration     String?
  language     String
  price        String
  requirements String
  description  String
  category     String
  createdAt    DateTime  @default(now())
  updatedAt    DateTime?
  thumbNail    String?
  content      Chapter[]
  userIds      String[]  @db.ObjectId
  users        User[]    @relation(fields: [userIds], references: [id])
  review       Review[]
}

model Chapter {
  id            String   @id @default(auto()) @map("_id") @db.ObjectId
  chapterName   String
  chapterTitle  String
  pdfFileTitles String[]
  videoTitles   String[]
  videoLinks    String[]
  pdfLinks      String[]
  Course        Course?  @relation(fields: [courseId], references: [id])
  courseId      String?  @db.ObjectId
}

enum Role {
  user
  teacher
}

model Token {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime @default(now())
}

model Review {
  id       String  @id @default(auto()) @map("_id") @db.ObjectId
  rating   Int
  text     String?
  user     User    @relation(fields: [userId], references: [id])
  userId   String  @unique @db.ObjectId
  course   Course? @relation(fields: [courseId], references: [id])
  courseId String? @db.ObjectId
}
